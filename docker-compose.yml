version: "3.2"

networks:
  frontend:
  backend:


services:

  webmvc:
    image: shoes/mvc
    build: 
      context: .\src\Web\WebMvc
      dockerfile: Dockerfile
    environment: 
      - ASPNETCORE_ENVIRONMENT=Development 
      - CatalogUrl=http://catalog
      - IdentityUrl=http://10.0.75.1:5000
      - CartUrl=http://cart
      - OrderUrl=http://order
      
       
    container_name: webshop
    ports:
      - "5200:80"
    networks:
      - frontend 
    depends_on:
      - catalog
      - tokenserver
      - cart
      - order
             
  cart:
    image: shoes/cart
    build: 
      context: .\src\Services\CartApi
      dockerfile: Dockerfile
    environment: 
      - ASPNETCORE_ENVIRONMENT=Development 
      - IdentityUrl=http://tokenserver
    container_name: cartapi
    ports:
      - "5500:80"
    networks:
      - backend
      - frontend 
    depends_on:
      - basket.data
      - tokenserver 

  catalog:
    image: shoes/catalog
    build: 
      context: .\src\Services\ProductCatalogApi
      dockerfile: Dockerfile
    environment: 
      - ASPNETCORE_ENVIRONMENT=Development 
      - SQLSERVER_HOST=192.168.8.105\MSSQLLocalDB
      - DATABSE=CatalogDb
    container_name: catalogapi
    ports:
      - "5100:80"
    networks:
      - backend
      - frontend 
    depends_on:
      - tokenserver 
      
  order:
    image: shoes/order
    build: 
      context: .\src\Services\OrderApi
      dockerfile: Dockerfile
    
    environment: 
      - ASPNETCORE_ENVIRONMENT=Development 
      - IdentityUrl=http://tokenserver
      - SQLSERVER_HOST=192.168.8.105\MSSQLLocalDB
      - DATABSE=OrdersDB
    container_name: orderapi
    ports:
      - "5600:80"
    networks:
      - backend
      - frontend 
    depends_on:
      - tokenserver 

  tokenserver:
    image: shoes/tokenservice
    build: 
      context: .\src\Services\TokenServiceApi
      dockerfile: Dockerfile
    environment: 
      - ASPNETCORE_ENVIRONMENT=Development 
      - SQLSERVER_HOST=192.168.8.105\MSSQLLocalDB
      - DATABSE=TokenServiceDB
      - MvcClient=http://localhost:5200   
      - BasketApiClient=http://localhost:5500
      - OrderApiClient=http://localhost:5600
    container_name: tokenserviceapi
    ports:
      - "5000:80"
    networks:
      - backend
      - frontend

  basket.data:
    image: redis
    container_name: redisdb
    ports:
      - "6377:6379"  
    networks:
      - backend 

 